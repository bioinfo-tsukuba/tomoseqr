// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// hoge
List hoge(arma::cube sourceCube, arma::vec xk, arma::vec yk, arma::vec zk, std::int32_t numIter);
RcppExport SEXP _tomoseqr_hoge(SEXP sourceCubeSEXP, SEXP xkSEXP, SEXP ykSEXP, SEXP zkSEXP, SEXP numIterSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::cube >::type sourceCube(sourceCubeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type xk(xkSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type yk(ykSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type zk(zkSEXP);
    Rcpp::traits::input_parameter< std::int32_t >::type numIter(numIterSEXP);
    rcpp_result_gen = Rcpp::wrap(hoge(sourceCube, xk, yk, zk, numIter));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_tomoseqr_hoge", (DL_FUNC) &_tomoseqr_hoge, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_tomoseqr(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
